openapi: 3.0.3
info: 
  title: CarXperto
  description: API for CarXperto application
  version: 1.0.0
  contact:
    email: ckamsi04@gmail.com
servers:
  - url: http://localhost:3000/api/v1
  - url: https://carxperto.onrender.com/api/v1

schemes: [http,https]

tags:
  - name: auth
  - name: seller
  - name: car

paths:
  /auth/register:
    post:
      tags:
        - auth
      summary: Provide basic information for user registration
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Success
        '400':
          description: Bad request
        '500':
          description: Internal Server Error
  /auth/login:
    post:
      tags:
        - auth
      summary: Provide basic information for user login
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  description: A unique email for authentication
                password:
                  type: string
                  description: A secure password for authentication
      responses:
        '201':
          description: Success
        '400':
          description: Bad request
        '500':
          description: Internal Server Error
  /auth/get_current_user:
    get:
      tags:
        - auth
      summary: This route authenticates the user token and responds with the verified user's data
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '500':
          description: Internal Server Error
      security:
        - BearerAuth: []

  /sellers/register:
    post:
      tags:
        - seller
      summary: Onboards a user as a seller on the platform
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Seller'
      responses:
        '201':
          description: Success
        '400':
          description: Bad request
        '500':
          description: Internal Server Error
      security:
        - BearerAuth: []
  /sellers/verify:
    post:
      tags:
        - seller
      summary: Verify a seller (Admin Only)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sellerId
              properties:
                sellerId:
                  type: string
                  description: The ID of the seller to be verified
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized - Only admins can access this route
        '404':
          description: Seller not found
        '500':
          description: Internal Server Error
      security:
        - BearerAuth: []
  
  /cars:
    post:
      tags:
        - car
      summary: Listing a new car (Sellers only)
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                model:
                  type: string
                category:
                  type: string
                sellingPrice:
                  type: number
                costPrice:
                  type: number
                condition:
                  type: string
                shortDescription:
                  type: string
                longDescription:
                  type: string
                year:
                  type: string
                color:
                  type: string
                mileage:
                  type: string
                make:
                  type: string
                quantity:
                  type: number
                discount:
                  type: number
                discountType:
                  type: string
                status:
                  type: string
                image:
                  type: string
                  format: binary
      responses:
        '201':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not found
        '500':
          description: Internal Server Error
      security:
        - BearerAuth: []
  /cars/{carId}:
    put:
      tags:
        - car
      summary: Update a car's details (Sellers only)
      parameters:
        - name: carId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the car to update
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Car'
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not found
        '500':
          description: Internal Server Error
      security:
        - BearerAuth: []

    delete:
      tags:
        - car
      summary: Delete a car (Sellers only)
      parameters:
        - name: carId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the car to delete
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not found
        '500':
          description: Internal Server Error
      security:
        - BearerAuth: []
  /cars/{carId}/{action}:
    post:
      tags:
        - car
      summary: Perform an action on a car (Sellers only)
      parameters:
        - name: carId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the car
        - name: action
          in: path
          required: true
          schema:
            type: string
            enum: [draft, publish]
          description: The action to perform on the car (draft or publish)
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not found
        '500':
          description: Internal Server Error
      security:
        - BearerAuth: []

components:
  schemas:
    User:
      type: object
      required:
        - email
        - password
        - username
        - fullname
      properties:
        username:
          type: string
          description: A unique username for authentication
        password:
          type: string
          description: A secure password for authentication
        email:
          type: string
          description: A unique email for authentication
        fullname:
          type: string
          description: First and lastname of the user separated by a space
        account_type:
          type: string
          description: Specifies the type of user
    Seller:
      type: object
      required:
        - storeName
        - state
        - town
        - street
        - country
        - phone
      properties:
        storeName:
          type: string
          description: A unique name for the seller's store
        state:
          type: string
          description: State where the store is located
        town:
          type: string
          description: Town where the store is located
        street:
          type: string
          description: Street where the store is located
        country:
          type: string
          description: Country of operation
        zipCode:
          type: string
          description: Zip code of operation
        other:
          type: string
          description: Additional details of the location
        phone:
          type: string
          description: Phone number of the seller
    Car:
      type: object
      required:
        - name
        - model
        - category
        - sellingPrice
        - costPrice
        - condition
        - shortDescription
        - longDescription
        - year
        - color
        - mileage
        - make
        - quantity
      properties:
        name:
          type: string
        model:
          type: string
        category:
          type: string
        sellingPrice:
          type: number
        costPrice:
          type: number
        condition:
          type: string
        shortDescription:
          type: string
        longDescription:
          type: string
        year:
          type: string
        color:
          type: string
        mileage:
          type: number
        make:
          type: string
        quantity:
          type: number
        discount:
          type: number
        discountType:
          type: string
        image:
          type: string